'''import math
a = int(input("Enter value of a: "))
b = int(input("Enter value of b: "))
c = int(input("Enter value of c: "))
d = b * b - 4 * a * c
if d < 0:
    print("ROOTS are imaginary")
else:
    root1 = (-b + math.sqrt(d)) / (2 * a)
    root2 = (-b - math.sqrt(d)) / (2 * a)
    print("Root 1 = ", root1)
    print("Root 2 = ", root2)

# while statements
a,b = 2,3
while b<1000:
    print(b, end=",")
    a, b = b, a+b

# if Statemants
'''
'''
x = int(input("\nEnter value of x: "))

if x<0:
    x==0
    print("value is o")
elif x == 0:
    print("Zero")
elif x ==1:
    print("single")
else:
    print("more")
'''
'''
# function test

def fib(n):
    a,b, = 0,1
    while a<n:
        print(a, end=' ')
        a,b =b, a +b
    print()

fib(2000)

def f(a, L=[]):
    L.append(a)
    return L
print(f(1))
print(f(2))
print(f(3))

def parrot(voltage, state='a stiff', action='Voom', type="nowegein Blue"):
    print("-- This parrot would't", action, end=' ')
    print("if you put", voltage, "volts through it.")
    print("-- Lovely plymage, the", type)
    print("-- It's", state, "!")

parrot(10000)
parrot(voltage=1000)
parrot(voltage=100000, action='Vooooom')
parrot(action='Voooooom', voltage=100000)
parrot('a million', 'bereft of life', 'jump')
parrot('a thousand', state='pushing up the daisies')
'''

# Lambda Expressions

students = [(1,'one',22),(2,'two',32),(4,'three',33),(0,'zero',28)]
students.sort(key=lambda student: student[2])
print(students)

# module 

ss
